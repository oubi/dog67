{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var EventType = require(\"EventType\");\r\nvar StateType = require(\"StateType\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        maxSpeed : 400,\r\n        initialSpeed:100,\r\n        accelerate : 300,\r\n        dragAccelerate : 800,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        this.leftLock = false;\r\n        this.rightLock = false;\r\n        this.speed = 0;\r\n        this.initListener();\r\n        \r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        var offsetSpeed;\r\n        if(this.stateType === StateType.aMovingRight){\r\n            if(this.rightLock === true){\r\n                this.speed = 0;\r\n            }\r\n            else{\r\n                if(this.speed < this.initialSpeed){\r\n                    this.speed = this.initialSpeed;\r\n                }\r\n                offsetSpeed = parseInt(this.accelerate*dt);\r\n                this.speed += offsetSpeed;\r\n                if(this.speed > this.maxSpeed){\r\n                    this.speed = this.maxSpeed;\r\n                }\r\n            }\r\n        }\r\n        else if(this.stateType === StateType.aMovingLeft){\r\n            if(this.leftLock === true){\r\n                this.speed = 0;\r\n            }\r\n            else{\r\n                if(this.speed > -this.initialSpeed){\r\n                    this.speed = -this.initialSpeed;\r\n                }\r\n                offsetSpeed = parseInt(this.accelerate*dt);\r\n                this.speed -= offsetSpeed;\r\n                if(this.speed < -this.maxSpeed){\r\n                    this.speed = -this.maxSpeed;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.stateType === StateType.aMoveToStop){\r\n            var dragSpeed = parseInt(this.dragAccelerate*dt);\r\n            if(this.speed > 0 ){\r\n                this.speed -= dragSpeed;\r\n            }\r\n            else if(this.speed < 0 ){\r\n                this.speed += dragSpeed;\r\n            }\r\n        }\r\n\r\n        if(this.speed === 0){\r\n            if(this.stateType === StateType.aMoveToStop){\r\n                this.mIdleState();\r\n            }\r\n        }\r\n        \r\n        // console.log(this.stateType,this.speed,\" : \",this.maxSpeed);\r\n        this.node.x +=this.speed*dt;\r\n    },\r\n    \r\n    initListener : function(){\r\n        this.node.on(EventType.aLeftEvent, \r\n            function (event) {\r\n                //console.log(event.type);\r\n                this.mLeft();\r\n            },\r\n            this);\r\n            \r\n        this.node.on(EventType.aRightEvent, \r\n            function (event) {\r\n                // console.log(event.type,event.getUserData());\r\n                this.mRight();\r\n            },\r\n            this);\r\n\r\n        this.node.on(EventType.aLeftStopEvent, \r\n            function (event) {\r\n                //console.log(event.type);\r\n                this.mMoveLeftToStopState();\r\n            },\r\n            this);\r\n            \r\n        this.node.on(EventType.aRightStopEvent, \r\n            function (event) {\r\n                //console.log(event.type);\r\n                this.mMoveRightToStopState();\r\n            },\r\n            this);\r\n        this.node.on(EventType.aMLeftLockEvent, \r\n            function (event) {\r\n                //console.log(event.type);\r\n                this.mLeftLock(event);\r\n            },\r\n            this);\r\n        this.node.on(EventType.aMRightLockEvent, \r\n            function (event) {\r\n                //console.log(event.type);\r\n                this.mRightLock(event);\r\n            },\r\n            this);\r\n    },\r\n\r\n    mLeft: function() {\r\n\r\n        this.mMovingLeftState();\r\n        \r\n    },\r\n\r\n    mRight: function() {\r\n\r\n        this.mMovingRightState();\r\n    },\r\n    \r\n    // aIdle: \"ActorIdle\",\r\n    // aMovingLeft: \"ActorMovingLeft\",\r\n    // aMovingRight: \"ActorMovingRight\",\r\n    // aMoveToStop: \"ActorMoveToStop\",\r\n    \r\n    mMovingLeftState: function() {\r\n        \r\n        this.stateType = StateType.aMovingLeft;\r\n        \r\n        this.node.scaleX = -1;\r\n\r\n    },\r\n    \r\n    mMovingRightState: function() {\r\n        \r\n        this.stateType = StateType.aMovingRight;\r\n        \r\n        this.node.scaleX = 1;\r\n    },\r\n    \r\n    mMoveLeftToStopState: function() {\r\n        \r\n        if(this.stateType === StateType.aMovingLeft){\r\n            this.mMoveToStopState();\r\n        }\r\n\r\n    },\r\n    \r\n    mMoveRightToStopState: function() {\r\n        \r\n        if(this.stateType === StateType.aMovingRight){\r\n             this.mMoveToStopState();\r\n        }\r\n\r\n    },\r\n    \r\n    mMoveToStopState: function() {\r\n        \r\n        this.stateType = StateType.aMoveToStop;\r\n\r\n    },\r\n    \r\n    mIdleState: function() {\r\n        \r\n        this.stateType = StateType.aIdle;\r\n\r\n    },\r\n    \r\n    mLeftLock: function(event) {\r\n        var userData = event.getUserData();\r\n\r\n        this.leftLock = userData.bool;\r\n        // console.log(\"mLeftLock--->\"+this.leftLock);\r\n    },\r\n    \r\n    mRightLock: function(event) {\r\n        var userData = event.getUserData();\r\n\r\n        this.rightLock = userData.bool;\r\n        // console.log(\"mLeftLock--->\"+this.rightLock);\r\n    },\r\n\r\n});\r\n"
  ]
}