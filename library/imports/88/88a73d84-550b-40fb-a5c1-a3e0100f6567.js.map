{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var EventType = require(\"EventType\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...rightOffsetRate \r\n        leftOffsetRate : .3,\r\n        rightOffsetRate : .3,\r\n        topOffsetRate : .3,\r\n        bottomOffsetRate : .3,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this.initListener();\r\n\r\n    },\r\n    \r\n    initListener: function(){\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDebugDraw = true;\r\n    },\r\n    \r\n    onDisable: function () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n    },\r\n    \r\n    onCollisionEnter: function (other, self) {\r\n        // console.log(\"onCollisionEnter\");\r\n        // this.node.color = cc.Color.RED;\r\n        \r\n        //conllider\r\n        // aConlliderEnter : \"ActorConlliderEnter\",\r\n        // aConlliderStay : \"ActorConlliderStay\",\r\n        // aConlliderExit : \"ActorConlliderExit\",\r\n        \r\n        var event = new cc.Event.EventCustom(EventType.aConlliderEnter, true);\r\n        var userData = {};\r\n        userData.other = other;\r\n        userData.actor = self;\r\n        \r\n        var otherAabb = other.world.aabb;\r\n        var selfAabb = self.world.aabb;\r\n        var otherPreAabb = other.world.preAabb;\r\n        var selfPreCAabb = self.world.preAabb;\r\n        \r\n        // check part \r\n        userData.part = this.checkPart(otherAabb,selfAabb,otherPreAabb,selfPreCAabb);\r\n\r\n        event.setUserData(userData);\r\n        this.node.dispatchEvent(event);\r\n    },\r\n\r\n    checkPart: function(otherAabb,selfAabb,otherPreAabb,selfPreCAabb){\r\n        \r\n        var otherCenter = otherAabb.center;\r\n        var selfCenter = selfAabb.center;\r\n        \r\n        var otherPreCenter = otherPreAabb.center;\r\n        var selfPreCenter = selfPreCAabb.center;\r\n        \r\n        var leftBorder = selfCenter.x-selfAabb.width*this.leftOffsetRate*.5;\r\n        var rightBorder = selfCenter.x+selfAabb.width*this.rightOffsetRate*.5;\r\n        var topBorder = selfCenter.y+selfAabb.height*this.topOffsetRate*.5;\r\n        var bottomBorder = selfCenter.y+selfAabb.height*this.bottomOffsetRate*.5;\r\n        \r\n        var part;\r\n        \r\n        //check x-axis\r\n        var otherPreAabbClone = otherPreAabb.clone();\r\n        var selfPreAabbClone = selfPreCAabb.clone();\r\n        otherPreAabbClone.x = otherAabb.x;\r\n        selfPreAabbClone.x = selfAabb.x;\r\n        if (cc.Intersection.rectRect(selfPreAabbClone,otherPreAabbClone)) {\r\n            //left be hit\r\n            if (selfPreCenter.x > selfCenter.x || otherPreCenter.x < otherCenter.x) {\r\n                // console.log(\"checkPart-->left be hit\");\r\n                if(otherAabb.yMin >= topBorder){\r\n                    part = EventType.cPartLeftTop;\r\n                }\r\n                else if(otherAabb.yMax <= topBorder){\r\n                    part = EventType.cPartLeftBottom;\r\n                }\r\n                else{\r\n                    part = EventType.cPartLeft;\r\n                }\r\n            }\r\n            //right be hit\r\n            else if (selfPreCenter.x < selfCenter.x || otherPreCenter.x > otherCenter.x) {\r\n                // console.log(\"checkPart-->right be hit\");\r\n                if(otherAabb.yMin >= topBorder){\r\n                    part = EventType.cPartRightTop;\r\n                }\r\n                else if(otherAabb.yMax <= topBorder){\r\n                    part = EventType.cPartRightBottom;\r\n                }\r\n                else{\r\n                    part = EventType.cPartRight;\r\n                }\r\n            }\r\n        }\r\n        \r\n        //check y-axis\r\n        otherPreAabbClone = otherPreAabb.clone();\r\n        selfPreAabbClone = selfPreCAabb.clone();\r\n        otherPreAabbClone.y = otherAabb.y;\r\n        selfPreAabbClone.y = selfAabb.y;\r\n        if (cc.Intersection.rectRect(selfPreAabbClone,otherPreAabbClone)) {\r\n            //top be hit\r\n            if (selfPreCenter.y < selfCenter.y || otherPreCenter.y > otherCenter.y) {\r\n                // console.log(\"checkPart-->top be hit\");\r\n                if(otherAabb.xMax <= leftBorder){\r\n                    part = EventType.cPartTopLeft;\r\n                }\r\n                else if(otherAabb.xMin >= rightBorder){\r\n                    part = EventType.cPartTopRight;\r\n                }\r\n                else{\r\n                    part = EventType.cPartTop;\r\n                }\r\n            }\r\n            //bottom be hit\r\n            else if (selfPreCenter.y > selfCenter.y || otherPreCenter.y < otherCenter.y) {\r\n                // console.log(\"checkPart-->bottom be hit\");\r\n                if(otherAabb.xMax <= leftBorder){\r\n                    part = EventType.cPartBottomLeft;\r\n                }\r\n                else if(otherAabb.xMin >= rightBorder){\r\n                    part = EventType.cPartBottomRight;\r\n                }\r\n                else{\r\n                    part = EventType.cPartBottom;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // check corner\r\n        if(!part){\r\n            //left\r\n            if (selfPreCenter.x > selfCenter.x || otherPreCenter.x < otherCenter.x) {\r\n                // console.log(\"checkCorner-->left\",selfPreCenter.y,selfCenter.y);\r\n                if(selfPreCenter.y < selfCenter.y){\r\n                    part = EventType.cPartTopLeft;\r\n                }\r\n                else{\r\n                    part = EventType.cPartBottomLeft;\r\n                }\r\n            }\r\n            //right\r\n            else if (selfPreCenter.x < selfCenter.x || otherPreCenter.x > otherCenter.x) {\r\n                // console.log(\"checkCorner-->right\",selfPreCenter.y,selfCenter.y);\r\n                if(selfPreCenter.y < selfCenter.y){\r\n                    part = EventType.cPartTopRight;\r\n                }\r\n                else{\r\n                    part = EventType.cPartBottomRight;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // if(!part){\r\n        //     console.log(\"part!==undefined------------------------------------------------->\");\r\n        // }\r\n\r\n        return part;\r\n    },\r\n    \r\n    onCollisionStay: function (other, self) {\r\n        \r\n    },\r\n    \r\n    onCollisionExit: function (other, self) {\r\n        // console.log(\"onCollisionExit\");\r\n        // this.node.color = cc.Color.WHITE;\r\n       \r\n        var event = new cc.Event.EventCustom(EventType.aConlliderExit, true);\r\n        var userData = {};\r\n        userData.other = other;\r\n        userData.actor = self;\r\n        \r\n        var otherPreAabb = other.world.aabb;\r\n        var selfPreCAabb = self.world.aabb;\r\n        var otherAabb = other.world.preAabb;\r\n        var selfAabb = self.world.preAabb;\r\n        \r\n        // otherAabb = other.world.aabb;\r\n        // selfAabb = self.world.aabb;\r\n        // otherPreAabb = other.world.preAabb;\r\n        // selfPreCAabb = self.world.preAabb;\r\n        \r\n        userData.part = this.checkPart(otherAabb,selfAabb,otherPreAabb,selfPreCAabb);\r\n\r\n        event.setUserData(userData);\r\n        this.node.dispatchEvent(event);\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}