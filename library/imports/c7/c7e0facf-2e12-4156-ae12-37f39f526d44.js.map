{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACrC,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAErC,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,eAAO,EAAG,IAAI;KACjB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;;AAEpC,YAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;AAED,gBAAY,EAAG,wBAAU;AACrB,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,EAChC,UAAU,KAAK,EAAE;;AAEb,gBAAI,CAAC,QAAQ,EAAE,CAAC;SACnB,EACD,IAAI,CAAC,CAAC;;AAEV,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,cAAc,EACjC,UAAU,KAAK,EAAE;;AAEb,gBAAI,CAAC,SAAS,EAAE,CAAC;SACpB,EACD,IAAI,CAAC,CAAC;KACb;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS,EAAC;AACtC,gBAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9C,gBAAI,OAAO,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA,GAAE,CAAC,GAAG,EAAE,CAAC;;AAE7C,gBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC;AACvB,gBAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACzB;KACJ;;AAED,YAAQ,EAAE,oBAAW;;AAEjB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;;AAEpC,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAClB;;AAED,aAAS,EAAE,qBAAW;;AAElB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;;AAErC,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAClB;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var EventType = require(\"EventType\");\r\nvar StateType = require(\"StateType\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        gravity : 2048,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.stateType = StateType.aLanding;\r\n        \r\n        this.initListener();\r\n    },\r\n    \r\n    initListener : function(){\r\n        this.node.on(EventType.aLandingEvent, \r\n            function (event) {\r\n                // console.log(event.type);\r\n                this.gLanding();\r\n            },\r\n            this);\r\n            \r\n        this.node.on(EventType.aFallDownEvent, \r\n            function (event) {\r\n                // console.log(event.type);\r\n                this.gFallDown();\r\n            },\r\n            this);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.stateType === StateType.aFallDown){\r\n            var endSpeed = this.speed - dt * this.gravity;\r\n            var offsetY = (endSpeed + this.speed)/2 * dt;\r\n            \r\n            this.node.y += offsetY;\r\n            this.speed = endSpeed;\r\n        }\r\n    },\r\n    \r\n    gLanding: function() {\r\n         // console.log(this.stateType);\r\n        this.stateType = StateType.aLanding;\r\n        \r\n        this.speed = 0;\r\n    },\r\n    \r\n    gFallDown: function() {\r\n        // console.log(this.stateType);\r\n        this.stateType = StateType.aFallDown;\r\n        \r\n        this.speed = 0;\r\n    },\r\n    \r\n});\r\n"
  ]
}